{"Enums/TimerType.html#/s:7Chronos9TimerTypeO5basicyACSdSg_yAA0B5EventVcSgAHtcACmF":{"name":"basic(interval:onTick:onFinish:)","abstract":"<p>A generic timer that is controlled manually.</p>","parent_name":"TimerType"},"Enums/TimerType.html#/s:7Chronos9TimerTypeO7counteryACSd_SdyAA0B5EventVcyAFcSgtcACmF":{"name":"counter(count:interval:onCount:onFinish:)","abstract":"<p>A timer that counts to/from a set amount of time at a specific interval","parent_name":"TimerType"},"Enums/TimerType.html#/s:7Chronos9TimerTypeO5delayyACSd_yAA0B5EventVctcACmF":{"name":"delay(duration:onFinish:)","abstract":"<p>A timer that invokes a single <code>finish</code> event after a set amount of time.</p>","parent_name":"TimerType"},"Enums/TimerType.html#/s:7Chronos9TimerTypeO8scheduleyAC10Foundation4DateV_AGSbAG_A2GtcyAA0B5EventVcyAIcSgtcACmF":{"name":"schedule(start:end:frequency:onSchedule:onFinish:)","abstract":"<p>A timer that invokes scheduled events between a start and end period using a frequency pattern.</p>","parent_name":"TimerType"},"Enums/TimerType.html#/s:7Chronos9TimerTypeO9stopwatchyACSdSg_yAA0B5EventVcSgtcACmF":{"name":"stopwatch(timeout:onTimeout:)","abstract":"<p>A timer that runs indefinitely, keeping track of the elapsed time.</p>","parent_name":"TimerType"},"Enums/TimerState.html#/s:7Chronos10TimerStateO3newyA2CmF":{"name":"new","abstract":"<p>The state of a timer that is brand new or has just been reset.</p>","parent_name":"TimerState"},"Enums/TimerState.html#/s:7Chronos10TimerStateO6activeyA2CmF":{"name":"active","abstract":"<p>The state of a timer that has been started and is actively running.</p>","parent_name":"TimerState"},"Enums/TimerState.html#/s:7Chronos10TimerStateO8inactiveyA2CmF":{"name":"inactive","abstract":"<p>The state of a timer that has been stopped and is not running.</p>","parent_name":"TimerState"},"Enums/TimerState.html#/s:7Chronos10TimerStateO8finishedyA2CmF":{"name":"finished","abstract":"<p>The state of a timer that has reached its duration and is now finished.</p>","parent_name":"TimerState"},"Structs/TimerEvent/EventType.html#/s:7Chronos10TimerEventV0C4TypeO4tickyA2EmF":{"name":"tick","abstract":"<p>An event to signal a single interval update.</p>","parent_name":"EventType"},"Structs/TimerEvent/EventType.html#/s:7Chronos10TimerEventV0C4TypeO6finishyA2EmF":{"name":"finish","abstract":"<p>An event to signal the end of interval updates.</p>","parent_name":"EventType"},"Structs/TimerEvent.html#/s:7Chronos10TimerEventV8Callbacka":{"name":"Callback","abstract":"<p>The method signature of a &ldquo;callback&rdquo; closure. A callback is invoked each time a timer","parent_name":"TimerEvent"},"Structs/TimerEvent/EventType.html":{"name":"EventType","abstract":"<p>A type of event that can be fired from a timer.</p>","parent_name":"TimerEvent"},"Structs/TimerEvent.html#/s:7Chronos10TimerEventV4typeAC0C4TypeOvp":{"name":"type","abstract":"<p>The type of event.</p>","parent_name":"TimerEvent"},"Structs/TimerEvent.html#/s:7Chronos10TimerEventV9timestamp10Foundation4DateVvp":{"name":"timestamp","abstract":"<p>The timestamp at the moment the event was fired.</p>","parent_name":"TimerEvent"},"Structs/TimerEvent.html#/s:7Chronos10TimerEventV9deltaTimeSdvp":{"name":"deltaTime","abstract":"<p>The amount of seconds since the last event of the same type was fired from the timer.</p>","parent_name":"TimerEvent"},"Structs/TimerEvent.html#/s:7Chronos10TimerEventV13timerLifetimeSdvp":{"name":"timerLifetime","abstract":"<p>The total elapsed seconds of the timer that fired the event.</p>","parent_name":"TimerEvent"},"Structs/TimerEvent.html#/s:7Chronos10TimerEventV10timesFiredSivp":{"name":"timesFired","abstract":"<p>The number of times the same event type has been fired by the timer.</p>","parent_name":"TimerEvent"},"Protocols/TimerDelegate.html#/s:7Chronos13TimerDelegateP8didStart5timeryAA0B0C_tF":{"name":"didStart(timer:)","abstract":"<p>Informs the delegate a timer was started.</p>","parent_name":"TimerDelegate"},"Protocols/TimerDelegate.html#/s:7Chronos13TimerDelegateP7didStop5timeryAA0B0C_tF":{"name":"didStop(timer:)","abstract":"<p>Informs the delegate a timer was stopped.</p>","parent_name":"TimerDelegate"},"Protocols/TimerDelegate.html#/s:7Chronos13TimerDelegateP8didReset5timeryAA0B0C_tF":{"name":"didReset(timer:)","abstract":"<p>Informs the delegate a timer was reset.</p>","parent_name":"TimerDelegate"},"Protocols/TimerDelegate.html#/s:7Chronos13TimerDelegateP5timer_7didTickyAA0B0C_AA0B5EventVtF":{"name":"timer(_:didTick:)","abstract":"<p>Informs the delegate a timer fired a <code>tick</code> event.</p>","parent_name":"TimerDelegate"},"Protocols/TimerDelegate.html#/s:7Chronos13TimerDelegateP5timer_9didFinishyAA0B0C_AA0B5EventVtF":{"name":"timer(_:didFinish:)","abstract":"<p>Informs the delegate a timer fired a <code>finish</code> event.</p>","parent_name":"TimerDelegate"},"Classes/Timer.html#/s:7Chronos5TimerC9Frequencya":{"name":"Frequency","abstract":"<p>The method definition of a frequency pattern - a method that returns <code>true</code> if a given","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC8delegateAA0B8Delegate_pSgvp":{"name":"delegate","abstract":"<p>A reference to the object listening to the timer events.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC5stateAA0B5StateOvp":{"name":"state","abstract":"<p>The state of the timer.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC4typeAA0B4TypeOvp":{"name":"type","abstract":"<p>The type of timer.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC8intervalSdSgvp":{"name":"interval","abstract":"<p>The amount of seconds the timer will run before firing a &ldquo;tick&rdquo; event. A nil value will","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC8durationSdSgvp":{"name":"duration","abstract":"<p>The amount of seconds the timer will run before firing a &ldquo;finish&rdquo; event. A nil value will","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC11elapsedTimeSdvp":{"name":"elapsedTime","abstract":"<p>The total amount of seconds the timer has been running.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC24elapsedTimeSinceLastTickSdvp":{"name":"elapsedTimeSinceLastTick","abstract":"<p>The amount of seconds the timer has been running since the last <code>tick</code> event was fired.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC26elapsedTimeSinceLastFinishSdvp":{"name":"elapsedTimeSinceLastFinish","abstract":"<p>The amount of seconds the timer has been running since the last <code>finish</code> event was fired.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC19timestampOfLastTick10Foundation4DateVSgvp":{"name":"timestampOfLastTick","abstract":"<p>The timestamp of the last <code>tick</code> event, used to calculate the delta time between events.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC21timestampOfLastFinish10Foundation4DateVSgvp":{"name":"timestampOfLastFinish","abstract":"<p>The timestamp of the last <code>finish</code> event, used to calculate the delta time between events.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC11timesTickedSivp":{"name":"timesTicked","abstract":"<p>The amount of times the timer has fired a <code>tick</code> event.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC13timesFinishedSivp":{"name":"timesFinished","abstract":"<p>The amount of times the timer has fired a <code>finish</code> event.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC6onTickyAA0B5EventVcSgvp":{"name":"onTick","abstract":"<p>The callback closure invoked each time a <code>tick</code> event is fired.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC8onFinishyAA0B5EventVcSgvp":{"name":"onFinish","abstract":"<p>The callback closure invoked each time a <code>finish</code> event is fired.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerCyAcA0B4TypeOcfc":{"name":"init(_:)","abstract":"<p>Creates a timer of a given type.</p>","parent_name":"Timer"},"Classes/Timer.html#/c:@M@Chronos@objc(cs)Timer(im)init":{"name":"init()","abstract":"<p>Creates a <code>basic</code> timer with default values.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC5Basic8interval6onTick0E6FinishACSd_yAA0B5EventVcSgAJtFZ":{"name":"Basic(interval:onTick:onFinish:)","abstract":"<p>Creates a <code>basic</code> timer from a set of arguments.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC7Counter5count8interval7onCount0F6FinishACSd_SdyAA0B5EventVcyAJcSgtFZ":{"name":"Counter(count:interval:onCount:onFinish:)","abstract":"<p>Creates a <code>countdown</code> timer from a set of arguments.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC5Delay8duration8onFinishACSd_yAA0B5EventVctFZ":{"name":"Delay(duration:onFinish:)","abstract":"<p>Creates a <code>delay</code> timer from a set of arguments.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC8Schedule5start3end9frequency02onC00G6FinishAC10Foundation4DateV_ALSbAL_A2LtcyAA0B5EventVcyANcSgtFZ":{"name":"Schedule(start:end:frequency:onSchedule:onFinish:)","abstract":"<p>Creates a <code>schedule</code> timer from a set of arguments.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC9Stopwatch7timeout9onTimeoutACSdSg_yAA0B5EventVcSgtFZ":{"name":"Stopwatch(timeout:onTimeout:)","abstract":"<p>Creates a <code>stopwatch</code> timer from a set of arguments.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC5startSbyF":{"name":"start()","abstract":"<p>Starts the timer, allowing events to be fired and elapsed time to be tracked.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC4stopSbyF":{"name":"stop()","abstract":"<p>Stops the timer, preventing events from firing and pausing the elapsed time.</p>","parent_name":"Timer"},"Classes/Timer.html#/s:7Chronos5TimerC5resetSbyF":{"name":"reset()","abstract":"<p>Resets the timer to a new state, setting all data properties back to zero, e.g., elapsed","parent_name":"Timer"},"Classes/Timer.html":{"name":"Timer","abstract":"<p>A timer that schedules and fires intervaled events.</p>"},"Protocols/TimerDelegate.html":{"name":"TimerDelegate","abstract":"<p>A type to which timer events can be delegated.</p>"},"Structs/TimerEvent.html":{"name":"TimerEvent","abstract":"<p>The metadata of a timer event.</p>"},"Enums/TimerState.html":{"name":"TimerState","abstract":"<p>The state of a timer.</p>"},"Enums/TimerType.html":{"name":"TimerType","abstract":"<p>A type of timer.</p>"},"Chronos.html":{"name":"Chronos"}}